# –§–∞–π–ª: main.py

import telebot
import logging
import sys
from telebot.types import Message

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ª–æ–≥–∏–∫–∏
from config import TELEGRAM_BOT_TOKEN
from logic import gemini_bot
from logger import log_message 

# --- –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ---
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__) 
# -----------------------------

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ telebot
if not TELEGRAM_BOT_TOKEN:
    logger.error("üö´ –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ config.py. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env.")
    # –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
    sys.exit(1)
    
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)


@bot.message_handler(commands=['start'])
def send_welcome(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
    bot.reply_to(
        message, 
        'ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç-–±–æ—Ç, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ Gemini. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–≤–µ—á—É!'
    )
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    log_message(message.chat.id, 'SYSTEM', f"Command /start")
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç {message.chat.id}")


@bot.message_handler(commands=['new_chat'])
def reset_chat(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /new_chat –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞."""
    chat_id = message.chat.id
    if gemini_bot.reset_chat_session(chat_id):
        response_text = '‚ú® –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã —Å–±—Ä–æ—à–µ–Ω. –ù–∞—á–Ω–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä!'
    else:
        response_text = 'üí´ –ö–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å—Å—è!'
        
    bot.reply_to(message, response_text)
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —Å–±—Ä–æ—Å–∞
    log_message(chat_id, 'SYSTEM', f"Command /new_chat executed. Context reset.")
    logger.info(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–±—Ä–æ—à–µ–Ω –¥–ª—è {chat_id}")


@bot.message_handler(content_types=['text'])
def handle_text_message(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∏—Ö –≤ Gemini."""
    
    user_message = message.text
    chat_id = message.chat.id
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {user_message}")
    
    # 1. –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    log_message(chat_id, 'USER', user_message) 

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    bot.send_chat_action(chat_id, 'typing')
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini
    gemini_response = gemini_bot.generate_response(chat_id, user_message)
    
    # 2. –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç Gemini
    log_message(chat_id, 'GEMINI', gemini_response) 
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ Telegram
    bot.reply_to(message, gemini_response)


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è long polling)...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–ø—Ä–æ—Å (polling) Telegram API
    bot.infinity_polling()

if __name__ == '__main__':
    # –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫ –Ω–µ —É–¥–∞—Å—Ç—Å—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ logic.py (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è GEMINI_API_KEY),
    # —Ç–æ main –Ω–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞, –∞ –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–∞.
    # –ï—Å–ª–∏ –∂–µ –æ—à–∏–±–∫–∏ –Ω–µ—Ç, —Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º:
    main()